version: 2
jobs:
  build:
    environment:
      - STANDALONE=TRUE
    docker:
      - image: circleci/php:7.2
      - image: circleci/redis
      - image: circleci/mysql:5.7.32
        environment:
          MYSQL_ROOT_PASSWORD:
          MYSQL_DATABASE: iznik
    steps:
      - checkout

      # ...and change some config, otherwise some of the larger attachment inserts fail.
#      - run: echo -e "[server]\nmax_allowed_packet=32MB" | tee -a /etc/mysql/my.cnf

      # Redis listens on localhost on travis, whereas we use a unix socket on the live servers.
#      - run: sudo sed -ie 's/\/var\/run\/redis\/redis.sock/127.0.0.1/g' include/config.php
#      - run: service redis-server restart
          
      # Spamassassin for filtering
      - run: sudo apt-get update
      - run: sudo apt-get install -y spamassassin spamc psmisc
      - run: sudo groupadd spamd
      - run: sudo useradd -g spamd -s /bin/false -d /var/log/spamassassin spamd
      - run: sudo mkdir /var/log/spamassassin
      - run: sudo sed -i 's/ENABLED=0/ENABLED=1/g' /etc/default/spamassassin
      - run: sudo sed -i 's/home-dir/home-dir -4/g' /etc/default/spamassassin
      - run: sudo service spamassassin start

#      - run: sudo apt-get install php-ssh2

      # GeoIP
#      - run: sudo apt-get install -y php-pear php-dev libgeoip-dev libcurl4-openssl-dev wget golang-go
#      - run: sudo pecl install geoip-1.1.1
#      - run: sudo add-apt-repository ppa:maxmind/ppa -y
#      - run: sudo apt-get install geoipupdate
#      - run: echo UserId $MAXMIND_ACCOUNT > /tmp/GeoIP.conf
#      - run: echo LicenseKey $MAXMIND_KEY >> /tmp/GeoIP.conf
#      - run: echo ProductIds GeoLite2-Country GeoLite2-City >> /tmp/GeoIP.conf
#      - run: sudo geoipupdate -v -f /tmp/GeoIP.conf

      # /etc/iznik.conf is where our config goes on the live server.  We have some keys in environment variables.
      - run: sudo cp install/iznik.conf.php /etc/iznik.conf
      - run: sudo chmod 777 /etc/iznik.conf
      - run: sudo sed -ie "s/'GOOGLE_VISION_KEY', 'zzz'/'GOOGLE_VISION_KEY', '$GOOGLE_VISION_KEY'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'TWITTER_CONSUMER_KEY', 'zzzz'/'TWITTER_CONSUMER_KEY', '$TWITTER_CONSUMER_KEY'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'TWITTER_CONSUMER_SECRET', 'zzzz'/'TWITTER_CONSUMER_SECRET', '$TWITTER_CONSUMER_SECRET'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'AZURE_CONNECTION_STRING', 'zzzz'/'AZURE_CONNECTION_STRING', '$AZURE_CONNECTION_STRING'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'PLAYGROUND_TOKEN', 'zzzz'/'PLAYGROUND_TOKEN', '$PLAYGROUND_TOKEN'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'PLAYGROUND_SECRET', 'zzzz'/'PLAYGROUND_SECRET', '$PLAYGROUND_SECRET'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'FBGRAFFITIAPP_ID', 'zzz'/'FBGRAFFITIAPP_ID', '$FBGRAFFITIAPP_ID'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'FBGRAFFITIAPP_SECRET', 'zzz'/'FBGRAFFITIAPP_SECRET', '$FBGRAFFITIAPP_SECRET'/g" /etc/iznik.conf
      - run: sudo sed -ie "s/'CHAT_HOST', 'users.ilovefreegle.org'/'CHAT_HOST', NULL/g" /etc/iznik.conf
      - run: echo "define('SQLLOG', TRUE);" >> /etc/iznik.conf

      # phpunit.xml is set up for running tests on our debug server.
      - run: sudo sed -ie 's/\/var\/www\/iznik.mt.dbg\//\//g' test/ut/php/phpunit.xml

      # Set up the DB.  We need to make some minor schema tweaks otherwise it fails to install.
      - run: sudo apt-get install -y mysql-client
      - run: mysql -e 'CREATE DATABASE IF NOT EXISTS iznik;'
      - run: sudo sed -ie 's/ROW_FORMAT=DYNAMIC//g' install/schema.sql
      - run: sudo sed -ie 's/timestamp(3)/timestamp/g' install/schema.sql
      - run: sudo sed -ie 's/timestamp(6)/timestamp/g' install/schema.sql
      - run: sudo sed -ie 's/CURRENT_TIMESTAMP(3)/CURRENT_TIMESTAMP/g' install/schema.sql
      - run: sudo sed -ie 's/CURRENT_TIMESTAMP(6)/CURRENT_TIMESTAMP/g' install/schema.sql
      - run: mysql -u root iznik < install/schema.sql
      - run: mysql -u root iznik < install/functions.sql
      - run: mysql -e "SET GLOBAL sql_mode = 'NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION'"

      # We need the DamLevLim UDF.
#      - run: cp install/mysqldamlevlim.so /usr/lib/mysql/plugin/
#      - run: mysql -u root -e "CREATE FUNCTION damlevlim RETURNS INT SONAME 'mysqldamlevlim.so'"

      # Install composer dependencies.  Use v1 as we're not compatible with v2.
      - run: cd composer; wget https://getcomposer.org/composer-1.phar; php composer-1.phar install; cd ..
      - run: php scripts/cron/background.php&
      - run: php scripts/cron/exports.php&

      # Set up the environment we need for running our UT.
      - run: php install/testenv.php

      # Run the UT.
      - run: cd http/api; ../../composer/vendor/bin/phpunit --stderr --bootstrap ../../composer/vendor/autoload.php -dxdebug.coverage_enable=1 --coverage-clover ../../test/ut/php/clover.xml --configuration ../../test/ut/php/phpunit.xml ../../test/ut/php/
      - run: php ../../composer/vendor/bin/php-coveralls -v
